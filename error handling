#customise your own error by building a class and inheriting from any build-in error class
#as it is class heritance, it will use all the existing attribute of the built-in error class
class MyError(Exception):
    pass

def divide(num1,num2):
    num = num1/num2
    return num

students = [
    {'name':'bob','grade':[1,2,3],'age':3},
    {'name':'bbbb','grade':[1,2,3],'age':0},
    {'name':'ccc','grade':[3],'age':10}
]

try:
    for student in students:
        if student['age'] == 0:
            raise MyError('age cannot be zero')
        name = student['name']
        grade = student['grade']
        average = divide(sum(grade), len(grade))
        print(f"{student['name']} average is {average}")
# catch error for main processing & indicate which key/identifier errors out
except Exception as e:
    print('error is :' ,e, 'for student ',student )
    print('class is :', type(e), 'for student ',student)
